@model IEnumerable<ReadTourDto>
@using Microsoft.AspNetCore.Identity
@using TakeTripAsp.Application.Features.CategoryFeatures.CategoryDtos;
@using TakeTripAsp.Application.Features.CityFeatures.CityDtos;
@using TakeTripAsp.Application.Features.StatusFeatures.StatusDtos;
@using TakeTripAsp.Application.Features.TourFeatures.TourDtos;
@using TakeTripAsp.Domain.Entity;

@{
    ViewData["Title"] = "Index";
    Layout = "_TakeATripAdminLayout";
    var userManager = Context.RequestServices.GetService(typeof(UserManager<AppUser>)) as UserManager<AppUser>;
}

<h1>Наші тури</h1>

<p>
    <a asp-controller="Tour" asp-action="Create" class="btn btn-inverse-primary btn-fw">Створити</a>
</p>
<div class="ml-1" style="width: 1250px;">
    @foreach (var item in Model)
    {
        <div class="content-wrapper border mr-2 mb-2">
            <div class="card-body mb-0">
                <div class="row align-items-center justify-content-between">
                    <h1 class="display-1">@Html.DisplayFor(modelItem => item.Name)</h1>
                    <div>
                        <a class="btn btn-outline-secondary btn-fw" href="@Url.Action("Edit", "Tour", new { id = item.Id })">Редагувати</a>
                        <a class="btn btn-outline-dark btn-fw" href="@Url.Action("Delete", "Tour", new { id = item.Id })">Видалити</a>
                    </div>
                </div>
                <div class="wrapper d-flex mb-3">
                    <div class="mr-2 mt-2 border border-top-0 border-bottom-0">
                        <p class="text-muted mr-2 ml-2">Країна</p>
                        <p class="lead mr-2 ml-2">@Html.DisplayFor(modelItem => item.Country)</p>
                    </div>
                    <div class="mr-2 mt-2 border border-top-0 border-bottom-0">
                        <p class="text-muted mr-2 ml-2">Міста</p>
                        <p class="lead mr-2 ml-2">
                            @{
                                if (item.CityNames != null)
                                {
                                    var cityNames = "";
                                    foreach (var city in item.CityNames)
                                    {
                                        if (!item.CityNames[item.CityNames.Count() - 1].Equals(city))
                                        {
                                            cityNames += city + ", ";
                                        }
                                        else cityNames += city;
                                    }
                                    <span>@cityNames</span>
                                }
                                else
                                {
                                    <span>Немає інформації</span>
                                }
                            }
                        </p>
                    </div>
                    <div class="mr-2 mt-2 border border-top-0 border-bottom-0">
                        <p class="text-muted mr-2 ml-2">Тривалість</p>
                        <p class="lead mr-2 ml-2">
                            @item.Start.ToString("dd.MM.yyyy") - @item.End.ToString("dd.MM.yyyy")
                        </p>
                    </div>
                    <div class="mr-2 mt-2 border border-top-0 border-bottom-0">
                        <p class="text-muted mr-2 ml-2">Ціна</p>
                        <p class="lead mr-2 ml-2">@Html.DisplayFor(modelItem => item.FullPrice)</p>
                    </div>
                    <div class="mr-2 mt-2 border border-top-0 border-bottom-0">
                        <p class="text-muted mr-2 ml-2">Ціна броні</p>
                        <p class="lead mr-2 ml-2">@Html.DisplayFor(modelItem => item.BookingPrice)</p>
                    </div>
                    <div class="mr-2 mt-2 border border-top-0 border-bottom-0">
                        <p class="text-muted mr-2 ml-2">Статус</p>
                        <p class="lead mr-2 ml-2">
                            @{
                                var statuses = ViewBag.Statuses as List<ReadStatusDto>;
                                if (item.StatusId != null)
                                {
                                    var statusName = statuses.FirstOrDefault(s => s.Id == item.StatusId)?.Name;
                                    <span>@statusName</span>
                                }
                                else
                                {
                                    <span>Немає інформації</span>
                                }
                            }
                        </p>
                    </div>
                    <div class="mr-2 mt-2 border border-top-0 border-bottom-0">
                        <p class="text-muted mr-2 ml-2">Категорії</p>
                        <p class="lead mr-2 ml-2">
                            @{
                                if (item.CategoryNames != null)
                                {
                                    var categoryNames = "";
                                    foreach (var category in item.CategoryNames)
                                    {
                                        if (!item.CategoryNames[item.CategoryNames.Count() - 1].Equals(category))
                                        {
                                            categoryNames += category + ", ";
                                        }
                                        else categoryNames += category;
                                    }
                                    <span>@categoryNames</span>
                                }
                                else
                                {
                                    <span>Немає інформації</span>
                                }
                            }
                        </p>
                    </div>
                </div>
                <div class="d-flex align-items-center justify-content-between">
                    <img src="@item.CoverPath" alt="@item.Name" style="display: block; height: 250px; width: 500px; margin-right: 10px;">
                    <div class="description-container border p-3" style="width: 500px; height: 250px;">
                        <div class="description-content">
                            <p class="description-text lead">@Html.DisplayFor(modelItem => item.Description)</p>
                        </div>
                    </div>
                    <div class="ml-2">
                        <div>
                            @if (User.Identity.IsAuthenticated)
                            {
                                var userId = userManager.GetUserId(User);
                                var user = userManager.FindByIdAsync(userId).Result;
                                if (user.SelectedTours != null && user.SelectedTours.Any(st => st.TourId == item.Id))
                                {
                                    <form action="/Tour/AddToSelectedTours" method="post">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button type="submit" class="btn btn-outline-secondary like-button">
                                            <i class="fa-solid fa-heart" style="color: #6610f2;"></i>
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <form action="/Tour/AddToSelectedTours" method="post">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button type="submit" class="btn btn-outline-secondary like-button">
                                            <i class="fa-regular fa-heart" style="color: #6610f2;"></i>
                                        </button>
                                    </form>
                                }
                            }
                            else
                            {
                                <a asp-area="" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Url.Action("Index")" class="btn btn-outline-secondary">
                                    <i class="fa-regular fa-heart" style="color: #6610f2;"></i>
                                </a>
                            }
                        </div>
                        <div class="mt-2">
                            <a asp-controller="Bookings" asp-action="Create" asp-route-id="@item.Id" class="btn btn-outline-secondary">
                                <i class=" fa-solid fa-wallet" style="color: #6610f2;"></i>
                            </a>
                        </div>
                        <div class="mt-2">
                            <a asp-controller="Reviews" asp-action="Create" asp-route-id="@item.Id" class="btn btn-outline-secondary">
                                <i class="fa-solid fa-marker" style="color: #6610f2;"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="descriptionModal" tabindex="-1" role="dialog" aria-labelledby="descriptionModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <p id="fullDescription"></p>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script>
        $(document).ready(function () {
            $('.description-container').click(function () {
                var description = $(this).find('.description-content').text();
                var modal = $('#descriptionModal');
                modal.find('#fullDescription').text(description);
                modal.modal('show');
            });
        });
    </script>

    <style>
        .description-container {
            overflow: hidden;
        }

        .description-content {
            white-space: normal;
            overflow: hidden;
            text-overflow: ellipsis;
            font-size: 18px;
            word-wrap: break-word;
            word-break: break-all;
        }
    </style>
}
